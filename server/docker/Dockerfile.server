# Start from golang base image
FROM golang:alpine as godev

ENV PORT=8080

# Set the current working directory inside the container 
WORKDIR /go/app

# Copy go mod and sum files 
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and the go.sum files are not changed 
RUN go mod download 

# Copy the source from the current directory to the working Directory inside the container 
COPY . .

# RUN apk add --no-cache \
#         libc6-compat

RUN go env -w CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=

# Build the Go app
RUN go build -o /server .

EXPOSE 8080

######## Start a new stage from scratch #######
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage
COPY --from=godev /server .

# Command to run the executable file
CMD ["./server"]
